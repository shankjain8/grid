<Window x:Class="DataGrid.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:l="clr-namespace:DataGrid" Title="MainWindow" Height="465.261" Width="827.209">
    <Window.Resources>
        <ObjectDataProvider x:Key="selectionUnits" 
                        MethodName="GetNames" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="DataGridSelectionUnit" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="selectionModes" 
                        MethodName="GetNames" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="DataGridSelectionMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="headersVisibility" 
                        MethodName="GetNames" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="DataGridHeadersVisibility" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
 </Window.Resources>
    <Grid Margin="20,20,20,40">
        <TabControl TabStripPlacement="Left" Margin="0,0,0,122">
            <TabItem Header="Auto Column Generation">
                <DataGrid ItemsSource="{Binding Customers}" Margin="0,0,0,31" />
            </TabItem>
            <TabItem Header="Grouping">
                <DataGrid ItemsSource="{Binding GroupedCustomers}" AutoGenerateColumns="False"  IsReadOnly="True">
                    
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Path=Name}" FontWeight="Bold" Padding="200"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">

                                                <Expander IsExpanded="False" Margin="15,0,0,0" AllowDrop="True">
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                           <TextBlock Text="{Binding Path=Name}" />
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <ItemsPresenter/>
                                                </Expander>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn  Header="Region" Binding="{Binding Region}" />
                        <DataGridTextColumn   Header="Silo" Binding="{Binding Silo}"  />
                        <DataGridTextColumn    Header="Job" Binding="{Binding Job}" />
                        <DataGridTextColumn    Header="Server" Binding="{Binding Server}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            
            <TabItem Header="Accessing selected cells">
                <DockPanel>
                    <Button DockPanel.Dock="Top" Click="GetSelectedCells" >Show selected cells</Button>
                    <DataGrid x:Name="selectedCellsGrid" ItemsSource="{Binding Customers}" SelectionMode="Extended" SelectionUnit="Cell" />
                </DockPanel>
            </TabItem>
        </TabControl>
        <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="50" Margin="82,306,0,0" VerticalAlignment="Top" Width="580" RenderTransformOrigin="0.5,0.5">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.099"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
        </Border>
    </Grid>
</Window>




using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel;
using System.Windows.Data;

namespace DataGrid
{
    public class MainWindowViewModel
    {
        public ICollectionView Customers { get; private set; }
        public ICollectionView GroupedCustomers { get; private set; }
     //   public ICollectionView GroupedCustomers1 { get; private set; }


        public MainWindowViewModel()
        {
            var _customers = new List<Customer>
                                 {
                                     new Customer
                                         {
                                             Application = "APSSIA",
                                             Region = "INT",
                                             Silo = "SILO1",
                                             Job = "job1",
                                             Status = "Running",
                                             Server = "DEV"
                                         },
                                     new Customer
                                         {
                                              Application = "APSSIA",
                                             Region = "INT",
                                             Silo = "SILO1",
                                             Job = "job2",
                                             Status = "Running",
                                             Server = "DEV"
                                         },
                                     new Customer
                                         {
                                             Application = "APSSIA",
                                             Region = "INT",
                                             Silo = "SILO4",
                                             Job = "job3",
                                             Status = "Running",
                                             Server = "DEV"
                                         },
                                     new Customer
                                         {
                                              Application = "APSIA",
                                             Region = "INT",
                                             Silo = "SILO1",
                                             Job = "job1",
                                             Status = "Not-Running",
                                             Server = "DEV"
                                         },
                                     new Customer
                                         {
                                              Application = "APSIA",
                                             Region = "INT",
                                             Silo = "SILO1",
                                             Job = "job2",
                                             Status = "Running",
                                             Server = "DEV"
                                         },
                                     new Customer
                                         {
                                              Application = "APSIA",
                                             Region = "INT",
                                             Silo = "SILO1",
                                             Job = "job3",
                                             Status = "Running",
                                             Server = "DEV"
                                         }
                                 };

            Customers = CollectionViewSource.GetDefaultView(_customers);

            GroupedCustomers = new ListCollectionView(_customers);
            //GroupedCustomers1 = new ListCollectionView(_customers);

            
            GroupedCustomers.GroupDescriptions.Add(new PropertyGroupDescription("Status"));
            GroupedCustomers.GroupDescriptions.Add(new PropertyGroupDescription("Application"));

        }
    }
}


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel;

namespace DataGrid
{
    
public class Customer : INotifyPropertyChanged
    {
       
        private string _application;
        private string _region;
        private string _silo;
        private string _job;
        private string _status;
        private string _server;

        public string Application
        {
            get { return _application; }
            set 
            {
                _application = value;
                NotifyPropertyChanged("Application");
            }
        }

        public string Region
        {
            get { return _region; }
            set
            {
                _region = value;
                NotifyPropertyChanged("Region");
            }
        }

        public string Silo
        {
            get { return _silo; }
            set
            {
                _silo = value;
                NotifyPropertyChanged("Silo");
            }
        }

        public string Job
        {
            get { return _job; }
            set
            {
                _job = value;
                NotifyPropertyChanged("Job");
            }
        }


        public string Status
        {
            get { return _status; }
            set
            {
                _status = value;
                NotifyPropertyChanged("Status");
            }
        }

        public string Server
        {
            get { return _server; }
            set
            {
                _server = value;
                NotifyPropertyChanged("Server");
            }
        }



        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        #region Private Helpers

        private void NotifyPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        #endregion
    }
}
